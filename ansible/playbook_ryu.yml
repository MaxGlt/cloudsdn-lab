---
- name: Setup controller with OVS and Ryu
  hosts: controller
  become: true

  vars:
    pyenv_root: /home/vagrant/.pyenv
    python_version: 3.9.13
    virtualenv_name: ryu-venv
    ryu_app_dir: /opt/ryu

  pre_tasks:
    - name: Ensure APT cache is updated
      ansible.builtin.apt:
        update_cache: true

  tasks:
    - name: Install required system packages
      ansible.builtin.apt:
        name:
          - openvswitch-switch
          - git
          - curl
          - wget
          - build-essential
          - libssl-dev
          - zlib1g-dev
          - libbz2-dev
          - libreadline-dev
          - libsqlite3-dev
          - llvm
          - libncurses5-dev
          - libncursesw5-dev
          - xz-utils
          - tk-dev
          - libffi-dev
          - liblzma-dev
          - python3-openssl
        state: present

    - name: Install pyenv
      become_user: vagrant
      ansible.builtin.shell: curl https://pyenv.run | bash
      args:
        executable: /bin/bash
        chdir: /home/vagrant
      environment:
        HOME: /home/vagrant

    - name: Install Python {{ python_version }} using pyenv
      become_user: vagrant
      ansible.builtin.shell: |
        export PYENV_ROOT="{{ pyenv_root }}"
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init --path)"
        eval "$(pyenv init -)"
        pyenv install -s {{ python_version }}
      args:
        executable: /bin/bash

    - name: Install pyenv-virtualenv plugin
      become_user: vagrant
      ansible.builtin.git:
        repo: https://github.com/pyenv/pyenv-virtualenv.git
        dest: "{{ pyenv_root }}/plugins/pyenv-virtualenv"

    - name: Create virtualenv {{ virtualenv_name }}
      become_user: vagrant
      ansible.builtin.shell: |
        export PYENV_ROOT="{{ pyenv_root }}"
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init --path)"
        eval "$(pyenv virtualenv-init -)"
        pyenv virtualenv {{ python_version }} {{ virtualenv_name }}
      args:
        executable: /bin/bash

    - name: Create directory for Ryu app
      ansible.builtin.file:
        path: "{{ ryu_app_dir }}"
        state: directory
        owner: vagrant
        group: vagrant
        mode: "0755"

    - name: Copy requirements.txt
      ansible.builtin.copy:
        src: files/requirements.txt
        dest: "{{ ryu_app_dir }}/requirements.txt"
        owner: vagrant
        group: vagrant
        mode: "0644"

    - name: Install Python dependencies in virtualenv
      become_user: vagrant
      ansible.builtin.shell: |
        export PYENV_ROOT="{{ pyenv_root }}"
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init --path)"
        eval "$(pyenv init -)"
        eval "$(pyenv virtualenv-init -)"
        pyenv shell {{ virtualenv_name }}
        pip install -r {{ ryu_app_dir }}/requirements.txt
      args:
        executable: /bin/bash

    - name: Copy Ryu application script
      ansible.builtin.copy:
        src: files/switch.py
        dest: "{{ ryu_app_dir }}/switch.py"
        owner: vagrant
        group: vagrant
        mode: "0755"

    - name: Copy systemd service for Ryu
      ansible.builtin.copy:
        src: files/ryu.service
        dest: /etc/systemd/system/ryu.service
        owner: root
        group: root
        mode: "0644"

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Enable and start Ryu service
      ansible.builtin.systemd:
        name: ryu
        enabled: true
        state: started

    - name: Attach VirtualBox interfaces to OVS bridge
      ansible.builtin.shell: |
        ovs-vsctl add-br br0 || true
        ovs-vsctl add-port br0 eth2 || true
        ovs-vsctl add-port br0 eth3 || true
        ip link set br0 up
        ip link set eth2 up
        ip link set eth3 up
        ovs-vsctl set-controller br0 tcp:192.168.56.10:6633
        ovs-vsctl set bridge br0 protocols=OpenFlow13
      args:
        executable: /bin/bash

    - name: Attribute static ip to client1
      ansible.builtin.command: ip addr add 192.168.10.1/24 dev eth2
      ignore_errors: true

    - name: Attribute static ip to client2
      ansible.builtin.command: ip addr add 192.168.20.1/24 dev eth3
      ignore_errors: true
